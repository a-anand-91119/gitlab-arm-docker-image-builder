stages:
  - setup
  - build
  - notification
  
variables:
  DOCKER_IMAGE: $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME
  LINK_ARTIFACT: true

update-version:
  stage: setup
  script:
    - |
      echo "Updating RELEASE file with tag:'$CI_COMMIT_TAG'"
    - sed -i "s/^RELEASE_VERSION=.*/RELEASE_VERSION=${CI_COMMIT_TAG}/" RELEASE
    - cat RELEASE
  rules:
    - if: $CI_COMMIT_TAG 

build-and-push-image:
  stage: build
  image:
    name: "docker"
  services:
    - name: docker:dind
      alias: buildcontainer
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - |
      echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USER --password-stdin $DOCKER_REGISTRY
  script:
    - |
      echo "Building Docker image for ARM architecture"
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_TAG .
    - |
      echo "Pushing Docker image to registry"
    - docker push $DOCKER_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
  dependencies:
    - update-version
  tags:
    - armhf

success_notification:
  stage: notification
  script:
    - wget https://raw.githubusercontent.com/DiscordHooks/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh success $DISCORD_WEBHOOK_URL
  when: on_success
  rules:
    - if: $CI_COMMIT_TAG 

failure_notification:
  stage: notification
  script:
    - wget https://raw.githubusercontent.com/DiscordHooks/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh failure $DISCORD_WEBHOOK_URL
  when: on_failure
  rules:
    - if: $CI_COMMIT_TAG 
